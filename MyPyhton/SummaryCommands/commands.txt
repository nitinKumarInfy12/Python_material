division / 			50/3 = 16.6666666
modulo % 			10 % 3 = 1
division returns integer //	50//3 = 16
power **     			2**5= 32
order of operation          PEMDAS parenthesis, Exponents, Multi, Div, Add, Sub

multiplication, Division, Addition, Sub    * , /, //, %, +, -    (in a bracket, lef takes precedence over the right operator)

Variable name:
cannot start witn number, ex : 1abc
can start with alphabets, ex abc
can start with _ (underscore), ex _abc
can declare complex vaues, ex : 1j
can declare power, ex : mNum = 10e10 or 10E10
strings should be in single/double quote, mys = "myValue" or 'myValue'

there are some reserved words that cannot be used for variable declaration

type of variable command = type(variable_Name)
typecast variable, float, int, str, 

====== print =====
x = 50
y = 10
print ("50 * 10 =", 50*10) : prints 50 * 10 = 500
print ("{0} * {1} = {2}".format(x,y,x * y)) ; prints 50 * 10 = 500 , its index based formating and index starts from 0

print("Hello", "World", sep="---") : prints Hello---World

name = 'Max'
age = 22
marks = 50.5
print ("Hello %s" %name)
print ("hello %s ! are you %d years old, scored %f" %(name,age,marks))

%.2f to limit the float format to 2 places after decimal
=============

input : command to take in put from user


list out built in functions: dir(__builtins__)
help on built in functions: help(function name)

built in modules ; ex: math
import math
help on builtin functions  help(module.method_name)
list of all available functions within the built in module: dir(module_name)


come out of command prompt : quit()

double click on the python file.

run the python file from command prompt:
open the command prompt, write Python, space , full filepath with filename.py

ex; c:\users\user2>python C:\users/user2\Desktop\foldername\firstprogram.py

or second way: open the command prompt, go to the folder using the cd command and type python space filename.py
ex: c:\users\user2\cd C:\users/user2\Desktop\foldername
c:\users\user2\Desktop\foldername>python firstprogram.py







